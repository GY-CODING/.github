name: Auto Tag & Release

on:
  workflow_call:

jobs:
  tag-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: npm install

    - name: Configure Git identity
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
      shell: bash

    - name: Increment version and get new version
      id: increment_version
      run: |
        CURRENT_VERSION=$(cat package.json | jq -r '.version')
        # Check if tag already exists
        if git rev-parse "v$CURRENT_VERSION" >/dev/null 2>&1; then
          echo "Tag v$CURRENT_VERSION already exists, incrementing version."
          npm version patch
        else
          echo "Using current version $CURRENT_VERSION"
          echo "new_version=$CURRENT_VERSION" >> $GITHUB_ENV
        fi
        NEW_VERSION=$(cat package.json | jq -r '.version')
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
      shell: bash

    - name: Commit and push version update
      run: |
        git add package.json package-lock.json CHANGELOG.md
        git commit -m "chore(release): bump version to v${{ env.new_version }}"
        git push
      shell: bash

    - name: Create new tag
      run: |
        git tag v${{ env.new_version }}
        git push origin v${{ env.new_version }}
      shell: bash

    - name: Create a new GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.new_version }}
        release_name: "Release v${{ env.new_version }}"
        body: "ðŸš€ Nueva release automÃ¡tica para la versiÃ³n v${{ env.new_version }}."
        draft: false
        prerelease: false
