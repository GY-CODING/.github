name: Deploy to Koyeb

on:
  workflow_call:
    inputs:
      project-name:
        type: string
        required: true
      project-id:
        type: string
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Koyeb CLI
        run: curl -sSL https://cli.koyeb.com/install | bash


      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      - name: Build Spring Boot app
        run: ./mvnw package -DskipTests

      - name: Build Docker image
        run: |
          docker build --build-arg SPRING_PROFILE=${{ secrets.SPRING_PROFILE }} \
                       --build-arg SPRING_PORT=${{ secrets.SPRING_PORT }} \
                       --build-arg FOTG_MONGO_URI=${{ secrets.FOTG_MONGO_URI }} \
                       --build-arg GITHUB_USERNAME=${{ secrets.PACKAGE_USERNAME }} \
                       --build-arg GITHUB_TOKEN=${{ secrets.PACKAGE_TOKEN }} \
                       -t ghcr.io/gy-coding/${{ inputs.project-name }}:latest .

      - name: Login to GitHub Packages
        run: echo ${{ secrets.PACKAGE_TOKEN }} | docker login ghcr.io -u ${{ secrets.PACKAGE_USERNAME }} --password-stdin

      - name: Push Docker image to GitHub Packages
        run: docker push ghcr.io/gy-coding/${{ inputs.project-name }}:latest

      - name: Deploy to Koyeb
        run: |
          koyeb app deploy ${{ inputs.project-id }} \
            --name=${{ inputs.project-name }} \
            --instance-type=nano \
            --ports=8003 \
            --git= \
            --docker ghcr.io/gy-coding/${{ inputs.project-name }}:latest \
            --env SPRING_PROFILE=${{ secrets.SPRING_PROFILE }} \
            --env SPRING_PORT=${{ secrets.SPRING_PORT }} \
            --env FOTG_MONGO_URI=${{ secrets.FOTG_MONGO_URI }} \
            --env GITHUB_USERNAME=${{ secrets.PACKAGE_USERNAME }} \
            --env GITHUB_TOKEN=${{ secrets.PACKAGE_TOKEN }}
